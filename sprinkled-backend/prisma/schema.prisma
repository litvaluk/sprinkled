generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int          @id @default(autoincrement())
  username      String       @unique
  password      String
  access_token  String
  refresh_token String
  teams         Team[]
  createdTeams  Team[]       @relation("creator")
  pictures      Picture[]
  places        Place[]
  plantEntries  PlantEntry[]
  events        Event[]
  reminders     Reminder[]

  @@map("users")
}

model Team {
  id        Int     @id @default(autoincrement())
  name      String  @unique
  users     User[]
  place     Place[]
  creator   User    @relation(fields: [creatorId], references: [id], name: "creator")
  creatorId Int

  @@map("teams")
}

model Place {
  id           Int          @id @default(autoincrement())
  name         String
  team         Team?        @relation(fields: [teamId], references: [id])
  teamId       Int?
  user         User?        @relation(fields: [userId], references: [id])
  userId       Int?
  plantEntries PlantEntry[]

  @@map("places")
}

model Picture {
  id           Int        @id @default(autoincrement())
  url          String
  createdAt    DateTime   @default(now())
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
  PlantEntry   PlantEntry @relation(fields: [plantEntryId], references: [id])
  plantEntryId Int

  @@map("pictures")
}

model PlantEntry {
  id        Int        @id @default(autoincrement())
  name      String
  createdAt DateTime   @default(now())
  creator   User       @relation(fields: [creatorId], references: [id])
  creatorId Int
  place     Place      @relation(fields: [placeId], references: [id])
  placeId   Int
  plant     Plant      @relation(fields: [plantId], references: [id])
  plantId   Int
  pictures  Picture[]
  events    Event[]
  reminders Reminder[]

  @@map("plant_entries")
}

model Plant {
  id           Int          @id @default(autoincrement())
  latinName    String
  commonName   String
  pictureUrl   String
  description  String
  height       Decimal
  spread       Decimal
  minTemp      Int
  maxTemp      Int
  leafColor    String
  bloomColor   String
  light        String
  zone         Int
  plantEntries PlantEntry[]

  @@map("plants")
}

model Event {
  id           Int        @id @default(autoincrement())
  date         DateTime
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
  plantEntry   PlantEntry @relation(fields: [plantEntryId], references: [id])
  plantEntryId Int
  action       Action     @relation(fields: [actionId], references: [id])
  actionId     Int

  @@map("events")
}

model Action {
  id       Int        @id @default(autoincrement())
  type     String
  events   Event[]
  reminder Reminder[]

  @@map("actions")
}

model Reminder {
  id           Int        @id @default(autoincrement())
  date         DateTime
  period       Int
  action       Action     @relation(fields: [actionId], references: [id])
  actionId     Int
  plantEntry   PlantEntry @relation(fields: [plantEntryId], references: [id])
  plantEntryId Int
  creator      User       @relation(fields: [creatorId], references: [id])
  creatorId    Int

  @@map("reminders")
}
